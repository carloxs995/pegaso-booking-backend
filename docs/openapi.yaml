openapi: 3.0.0
info:
  title: BookingApp API
  description: API for managing rooms, bookings and user accounts.
  version: 1.0.0

servers:
  - url: https://us-central1-pegaso-booking.cloudfunctions.net/api

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - bearerAuth: []

tags:
  - name: Users
    description: "Endpoints for user management"
  - name: Rooms
    description: "Endpoints for managing rooms"
  - name: Bookings
    description: "Endpoints for booking management"

paths:
  /rooms/check-availability/{id}:
    get:
      summary: Check room availability
      tags:
        - Rooms
      description: Checks if a room is available for booking.
      security: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: checkInDate
          in: query
          required: true
          schema:
            type: string
          description: "Check-in date in ISO format."
        - name: checkOutDate
          in: query
          required: true
          schema:
            type: string
          description: "Check-out date in ISO format."
        - name: quantityGuests
          in: query
          required: true
          schema:
            type: integer
          description: "Number of guests for the booking."
      responses:
        '200':
          description: Availability status returned.
          content:
            application/json:
              schema:
                type: object
                properties:
                  roomsMaxQuantity:
                    type: integer
                    description: "Maximum quantity of rooms available."
                  freeRooms:
                    type: integer
                    description: "Number of free rooms available."
                  isAvailable:
                    type: boolean
                    description: "Indicates if the room is available."
                  totalPrice:
                    type: number
                    description: "Total price for the requested stay."
  /rooms/{id}/details:
    get:
      summary: Get room details
      description: Retrieves details of a specific room.
      tags:
        - Rooms
      security: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Room details returned.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum: [Standard, Deluxe, Suite, Luxury, Penthouse]
                  name:
                    type: string
                  description:
                    type: string
                  capacity:
                    type: integer
                  totalRooms:
                    type: integer
                  pricePerNight:
                    type: number
                  amenities:
                    type: array
                    items:
                      type: string
                  available:
                    type: boolean
                  images:
                    type: array
                    items:
                      type: string
  /rooms:
    post:
      summary: Create a new room
      description: Adds a new room to the system.
      tags:
        - Rooms
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  enum: [Standard, Deluxe, Suite, Luxury, Penthouse]
                name:
                  type: string
                  minLength: 1
                description:
                  type: string
                  maxLength: 500
                  description: "Optional room description."
                capacity:
                  type: integer
                  minimum: 1
                totalRooms:
                  type: integer
                  minimum: 1
                pricePerNight:
                  type: number
                  minimum: 0.01
                amenities:
                  type: array
                  items:
                    type: string
                available:
                  type: boolean
                  default: true
                images:
                  type: array
                  items:
                    type: string
                  minItems: 1
      responses:
        '201':
          description: Room created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    minLength: 1
                    description: "Room ID"
    get:
      summary: Get all rooms
      description: Retrieves a list of all available rooms.
      tags:
        - Rooms
      security: []
      responses:
        '200':
          description: List of rooms returned.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: "Unique identifier for the room."
                        type:
                          type: string
                          enum: [Standard, Deluxe, Suite, Luxury, Penthouse]
                        name:
                          type: string
                        description:
                          type: string
                        capacity:
                          type: integer
                        totalRooms:
                          type: integer
                        pricePerNight:
                          type: number
                        amenities:
                          type: array
                          items:
                            type: string
                        available:
                          type: boolean
                        images:
                          type: array
                          items:
                            type: string

  /rooms/{id}:
    put:
      summary: Update room details
      description: Updates the details of an existing room.
      tags:
        - Rooms
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  minLength: 1
                description:
                  type: string
                  maxLength: 500
                capacity:
                  type: integer
                  minimum: 1
                totalRooms:
                  type: integer
                  minimum: 1
                pricePerNight:
                  type: number
                  minimum: 0.01
                amenities:
                  type: array
                  items:
                    type: string
                available:
                  type: boolean
                  default: true
                images:
                  type: array
                  items:
                    type: string
                  minItems: 1
      responses:
        '200':
          description: Room updated successfully.

  /bookings:
    get:
      summary: Get all bookings
      tags:
        - Bookings
      parameters:
        - name: isFromAdminArea
          in: query
          required: false
          schema:
            type: string
            enum: ["true", "false"]
          description: "If true, filters bookings for admin area view. Defaults to false."
        - name: serviceType
          in: query
          required: false
          schema:
            type: string
            enum: [Standard, Deluxe, Suite, Luxury, Penthouse]
          description: "Filter bookings by service type."
        - name: checkInDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
          description: "Filter bookings by check-in date in ISO format."
        - name: checkOutDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
          description: "Filter bookings by check-out date in ISO format."
        - name: continuation
          in: query
          required: false
          schema:
            type: string
            nullable: true
          description: "Pagination continuation token."
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            default: 15
          description: "Number of bookings per page (default: 15)."
        - name: isPaid
          in: query
          required: false
          schema:
            type: string
            enum: ["true", "false"]
          description: "Filter bookings based on payment status (true/false as string)."
      responses:
        '200':
          description: List of bookings returned.
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        customerFirstName:
                          type: string
                        customerLastName:
                          type: string
                        customerEmail:
                          type: string
                          format: email
                        customerPhone:
                          type: string
                        serviceName:
                          type: string
                        serviceId:
                          type: string
                        quantityGuests:
                          type: integer
                        checkInDate:
                          type: string
                          format: date-time
                        checkOutDate:
                          type: string
                          format: date-time
                        notes:
                          type: string
                        paymentMethod:
                          type: string
                        createdAt:
                          type: string
                          format: date-time
                        updatedAt:
                          type: string
                          format: date-time
                        servicePrice:
                          type: number
                        createdBy:
                          type: string
                        isPaid:
                          type: boolean
                        status:
                          type: string
                  continuation:
                    type: string
                    nullable: true
                  isLastPage:
                    type: boolean
                  totalCount:
                    type: integer
    post:
      summary: Create a booking
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                customerFirstName:
                  type: string
                  minLength: 1
                  description: "Customer's first name (mandatory)."
                customerLastName:
                  type: string
                  minLength: 1
                  description: "Customer's last name (mandatory)."
                customerEmail:
                  type: string
                  format: email
                  description: "Customer's email address (must be valid)."
                customerPhone:
                  type: string
                  minLength: 1
                  maxLength: 13
                  description: "Customer's phone number (valid format required)."
                serviceName:
                  type: string
                  enum: [Standard, Deluxe, Suite, Luxury, Penthouse]
                  description: "Type of room booked."
                serviceId:
                  type: string
                  minLength: 1
                  description: "ID of the booked service (mandatory)."
                quantityGuests:
                  type: integer
                  minimum: 1
                  description: "Number of guests (must be a positive integer)."
                checkInDate:
                  type: string
                  format: date-time
                  description: "Check-in date in ISO format (YYYY-MM-DDTHH:mm:ss.sssZ)."
                checkOutDate:
                  type: string
                  format: date-time
                  description: "Check-out date in ISO format (YYYY-MM-DDTHH:mm:ss.sssZ)."
                notes:
                  type: string
                  description: "Optional notes."
                paymentMethod:
                  type: string
                  enum: [cash]
                  default: cash
                  description: "Payment method (only 'cash' is accepted)."
      responses:
        '201':
          description: Booking created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    minLength: 1
                    description: "Booking ID"

  /bookings/{id}:
    get:
      summary: Get booking details
      tags:
        - Bookings
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Booking details returned.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  customerFirstName:
                    type: string
                  customerLastName:
                    type: string
                  customerEmail:
                    type: string
                    format: email
                  customerPhone:
                    type: string
                  serviceName:
                    type: string
                  serviceId:
                    type: string
                  quantityGuests:
                    type: integer
                  checkInDate:
                    type: string
                    format: date-time
                  checkOutDate:
                    type: string
                    format: date-time
                  notes:
                    type: string
                  paymentMethod:
                    type: string
                  createdAt:
                    type: string
                    format: date-time
                  updatedAt:
                    type: string
                    format: date-time
                  servicePrice:
                    type: number
                  createdBy:
                    type: string
                  isPaid:
                    type: boolean
                  status:
                    type: string
    put:
      summary: Modify a booking
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                checkInDate:
                  type: string
                  format: date-time
                  description: "Check-in date in ISO format."
                checkOutDate:
                  type: string
                  format: date-time
                  description: "Check-out date in ISO format."
                customerEmail:
                  type: string
                  format: email
                  description: "Customer's email address."
                customerFirstName:
                  type: string
                  description: "Customer's first name."
                customerLastName:
                  type: string
                  description: "Customer's last name."
                customerPhone:
                  type: string
                  description: "Customer's phone number."
                notes:
                  type: string
                  description: "Optional notes."
                paymentMethod:
                  type: string
                  enum: [cash]
                  description: "Payment method."
                quantityGuests:
                  type: integer
                  description: "Number of guests."
                serviceId:
                  type: string
                  description: "ID of the booked service."
                serviceName:
                  type: string
                  enum: [Standard, Deluxe, Suite, Luxury, Penthouse]
                  description: "Type of room booked."
                servicePrice:
                  type: number
                  description: "Price of the service."
      responses:
        '204':
          description: Booking updated successfully.
    delete:
      summary: Cancel a booking
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: hardDelete
          description: 'Only available for admin, if true the record will be removed from the database'
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '204':
          description: Booking cancelled successfully.

  /bookings/{id}/confirm:
    put:
      summary: Confirm a booking payment
      tags:
        - Bookings
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Booking payment confirmed.

  /users:
    get:
      summary: Get all users
      description: Retrieves a list of all users.
      tags:
        - Users
      security:
        - bearerAuth: []
      parameters:
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
          description: "Number of users per page."
        - name: pageToken
          in: query
          required: false
          schema:
            type: string
          description: "Token for pagination."
      responses:
        '200':
          description: List of users returned.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: "Unique identifier for the user."
                    email:
                      type: string
                      format: email
                      description: "User's email address."
                    emailVerified:
                      type: boolean
                      description: "Indicates if the email is verified."
                    disabled:
                      type: boolean
                      description: "Indicates if the user account is disabled."
                    firstName:
                      type: string
                      description: "User's first name."
                    lastName:
                      type: string
                      description: "User's last name."
                    role:
                      type: integer
                      description: "User role (1 = Guest, 2 = User, 3 = Admin)."
    post:
        summary: Create a new user
        description: Allows a guest to register as a new user.
        tags:
          - Users
        security: []
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  firstName:
                    type: string
                    minLength: 3
                    description: "User's first name (mandatory, min 3 characters)."
                  lastName:
                    type: string
                    minLength: 3
                    description: "User's last name (mandatory, min 3 characters)."
                  email:
                    type: string
                    format: email
                    description: "User's email (must be a valid email address)."
                  password:
                    type: string
                    minLength: 6
                    description: "User's password (mandatory, min 6 characters)."
        responses:
          '201':
            description: User created successfully.

  /users/me:
    get:
      summary: Get user profile
      tags:
        - Users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User profile returned.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: "Unique identifier for the user."
                  email:
                    type: string
                    format: email
                    description: "User's email address."
                  emailVerified:
                    type: boolean
                    description: "Indicates if the email is verified."
                  disabled:
                    type: boolean
                    description: "Indicates if the user account is disabled."
                  firstName:
                    type: string
                    description: "User's first name."
                  lastName:
                    type: string
                    description: "User's last name."
                  role:
                    type: integer
                    description: "User role (1 = Guest, 2 = User, 3 = Admin)."
